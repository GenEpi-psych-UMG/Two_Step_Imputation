// base.config

process {
    // Default cpus and memory for each task
    cpus = params.cpus
    memory = params.memory

    // Error strategy - consider 'retry' or 'terminate' for critical steps
    errorStrategy = 'finish'
    
    withName: 'EAGLE2' {
        memory = '2.GB'
    }

    withName: 'BEAGLE5' {
        conda = "conda-forge::openjdk"
    }

    withName: 'EXTRACT_INFO' {
        conda = "conda-forge::perl=5.26.2"
    }

    withName: 'RUN_R_SELECT' {
        // Ensure R and necessary libraries (e.g., tidyverse, data.table if used) are available
        conda = "conda-forge::r-base=4.4.2 conda-forge::r-tidyverse conda-forge::r-data.table"
    }

    withName: 'FILTER_VCF' {
        conda = "bioconda::vcftools=0.1.16"
    }
}

// Enable conda
conda {
    enabled = true
    cacheDir = "${baseDir}/conda"
    createTimeout = "60 min"
}

// Define Executor
executor {
    name = 'local'
    cpus = params.max_cpus
    memory = params.max_memory
}

// Enable pipeline reporting options
timeline {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/timeline_${params.run_id}.html"
}
report {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/report_${params.run_id}.html"
}
trace {
    overwrite = true
    enabled = true
    file = "${params.outdir}/pipeline_info/trace_${params.run_id}.txt"
    fields = 'task_id,name,status,exit,duration,realtime,%cpu,%mem,rss,vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes'
}

// Manifest information
manifest {
    name = 'UNION-nf'
    description = 'Nextflow implementation of the Two-Step Imputation pipeline'
    author = 'Khoa Ho'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.10.4'
    version = '1.0.0'
}